<?xml version="1.0" encoding="UTF-8"?>

<package schemaVersion="1.4.0" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
    <vendor>Nationstech</vendor>
    <url>http://www.keil.com/pack/</url>
    <name>N32G43x_DFP</name>

    <description>Nationstech N32G43x Series Device Support, Drivers and Examples</description>

    <releases>
	    <release version="1.1.0">
            Update TIM1 and TIM8 in the svd file.
			Modify Dvendor.
        </release>
		<release version="1.0.0">
            Add “IRAM2” to all devices.
			Delete TSC module.
        </release>
		<release version="0.9.6">
            Update the alglrithm for flash programming.
        </release>
        <release version="0.9.3">
            Add The Device N32G435T8Q7.
        </release>
		<release version="0.9.1">
            Add The Device N32G435GBQ7.
        </release>
        <release version="0.1.1">
            Delete package message.
        </release>
        <release version="0.1.0">
            Alpha version of N32G43x Device Family Pack.
        </release>
    </releases>

    <keywords>
        <keyword>Nationstech</keyword>
        <keyword>Device Support</keyword>
        <keyword>N32G43x</keyword>
        <keyword>N32</keyword>
    </keywords>

    <devices>
        <family Dfamily="N32G43x Series" Dvendor="Nationstech:184">
            <processor Dcore="Cortex-M4" DcoreVersion="r0p1" Dfpu="1" Dmpu="0" Dendian="Little-endian"/>
            <description>
            </description>

            <subFamily DsubFamily="N32G432">
                <description>
Up to 108MHz ARM Cortex-M4F, 128KB Flash, 32KB SRAM, 52xGPIO(MAX), 9xTimer, RTC, 28xPWM(MAX), 1x12bit 5Msps ADC, 1x12bit DAC, 5xU(S)ART, 1xLPUART, 2xSPI/I2S, 2xI2C, USB 2.0 FS Device, 1xCAN 2.0B, 1xDMA Hardware Cryptographic Engine.
                </description>
                <processor Dclock="108000000"/>
                <compile header="firmware/CMSIS/device/n32g43x.h" define="N32G43X N32G432 USE_STDPERIPH_DRIVER"/>

	
<device Dname="N32G432K8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    26&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>


<device Dname="N32G432KB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    26&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>


<device Dname="N32G432C8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    38&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>


<device Dname="N32G432CB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    38&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>


<device Dname="N32G432R8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    52&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    28&#xA;&#xD;
- ADC:    1x12bit with 16 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>


<device Dname="N32G432RB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    52&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    28&#xA;&#xD;
- ADC:    1x12bit with 16 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G432.svd"/>
</device>

            </subFamily>

            <subFamily DsubFamily="N32G435">
                <description>
Up to 108MHz ARM Cortex-M4F, 128KB Flash, 32KB SRAM, 52xGPIO(MAX), 9xTimer, RTC, 28xPWM(MAX), 1x12bit 5Msps ADC, 1x12bit DAC, 2xOPAMP, 2xCOMP, 5xU(S)ART, 1xLPUART, 2xSPI/I2S, 2xI2C, USB 2.0 FS Device, 1xCAN 2.0B, 1xDMA Hardware Cryptographic Engine.
                </description>
                <processor Dclock="108000000"/>
                <compile header="firmware/CMSIS/device/n32g43x.h" define="N32G43X N32G435 USE_STDPERIPH_DRIVER"/>

<device Dname="N32G435G8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   16KB&#xA;&#xD;
- I/O:    24&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:1/1&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 0&#xA;&#xD;
- CAN:    0&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x2000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>


<device Dname="N32G435GB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    24&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:1/1&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 0&#xA;&#xD;
- CAN:    0&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>

				
<device Dname="N32G435K8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   16KB&#xA;&#xD;
- I/O:    26&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x2000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>


<device Dname="N32G435KB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    26&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    14&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  2&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>

<device Dname="N32G435T8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    27&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>



<device Dname="N32G435C8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    38&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>


<device Dname="N32G435CB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    38&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    24&#xA;&#xD;
- ADC:    1x12bit with 10 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>


<device Dname="N32G435R8">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  64KB&#xA;&#xD;
- SRAM:   24KB&#xA;&#xD;
- I/O:    52&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    28&#xA;&#xD;
- ADC:    1x12bit with 16 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x4000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x10000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x10000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>


<device Dname="N32G435RB">
    <description>
&#xA;&#xD;
- Package:&#xA;&#xD;
- Clock:  108MHz&#xA;&#xD;
- Flash:  128KB&#xA;&#xD;
- SRAM:   32KB&#xA;&#xD;
- I/O:    52&#xA;&#xD;
- Voltage: 1.8V~3.6V -40~+105°C&#xA;&#xD;
- Timer:  9&#xA;&#xD;
- RTC:    1&#xA;&#xD;
- PWM:    28&#xA;&#xD;
- ADC:    1x12bit with 16 channels&#xA;&#xD;
- DAC:    1x12-bit&#xA;&#xD;
- OPAMP:  2&#xA;&#xD;
- COMP:   2&#xA;&#xD;
- USART:  3&#xA;&#xD;
- UART:   2&#xA;&#xD;
- LPUART: 1&#xA;&#xD;
- SPI/I2S:2/2&#xA;&#xD;
- I2C:    2&#xA;&#xD;
- USB Device: 1&#xA;&#xD;
- CAN:    1&#xA;&#xD;
- DMA:    1*&#xA;&#xD;
- AES/T-DES/SHA/SM1/SM3/SM4/SM7
&#xA;&#xD;
    </description>
    <memory id="IRAM1" access="rw" start="0x20000000" size="0x6000" default="1" init="0" />
	<memory id="IRAM2" access="rw" start="0x20006000" size="0x2000" default="1" init="0" />
    <memory id="IROM1" access="rx" start="0x08000000" size="0x20000" default="1" startup="1" />
    <algorithm name="Flash/N32G43x.FLM" start="0x08000000" size="0x20000" default="1" startup="1" />
    <debug svd="svd/N32G435.svd"/>
</device>

            </subFamily>
        </family>
    </devices>
        

    <conditions>
        <condition id="Compiler ARM">            <!-- conditions selecting ARM Compiler -->
            <require Tcompiler="ARMCC"/>
        </condition>

        <condition id="N32G43x CMSIS Device">            <!-- conditions selecting Devices -->
            <description>Nationstech N32G43x Series devices</description>
            <require Cclass ="CMSIS" Cgroup="CORE" Csub=""/>
            <require Dvendor="Nationstech:184" Dname="N32*"/>
        </condition>

        <condition id="N32G43x STDPERIPH">
            <description>Nationstech N32G43x Standard Peripherals Drivers</description>
            <require condition="N32G43x CMSIS Device"/>
            <require Cclass="Device" Cgroup="StdPeriph Drivers" Csub="Framework"/>
        </condition>

        <condition id="N32G43x STDPERIPH RCC">
            <description>Nationstech N32G43x Standard Peripherals Drivers with RCC</description>
            <require condition="N32G43x STDPERIPH"/>
            <require Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RCC"/>
        </condition>

        <condition id="N32G43x Algorithm Common" >
            <description>Nationstech N32G43x Series Algorithm Libraries Common Functions.</description>
            <require condition="N32G43x CMSIS Device"/>
            <require Cclass ="Device" Cgroup="Algorithm Libs" Csub="Common"/>
        </condition>

    </conditions>

    <components>
        <component Cclass="Device" Cgroup="Startup" Cversion="1.0.0" condition="N32G43x CMSIS Device">
            <description>Startup File for Nationstech N32G43x Series</description>
            <files>
                <!--  include folder -->
                <file category="include" name="firmware/CMSIS/device/"/>
                <file category="source" name="firmware/CMSIS/device/startup/startup_n32g43x.s" attr="config" condition="N32G43x CMSIS Device" version="1.0.0"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="System_N32G43x" Cversion="1.0.0" condition="N32G43x CMSIS Device">
            <description>System Clock Config File for Nationstech N32G43x</description>
            <files>
                <!--  include folder -->
                <file category="include" name="firmware/CMSIS/device/"/>
                <file category="source" name="firmware/CMSIS/device/system_n32g43x.c" attr="config" version="1.0.0"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="Framework" Cversion="1.0.0" condition="N32G43x STDPERIPH">
            <description>Standard Peripherals Drivers Framework</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FRAMEWORK
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32g43x_std_periph_driver/inc/"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/misc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="ADC" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Analog-to-digital converter (ADC) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_ADC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_adc.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_adc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="CAN" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Controller area network (CAN) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CAN
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_can.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_can.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="COMP" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Comparator (COMP) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_COMP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_comp.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_comp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="CRC" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>CRC calculation unit (CRC) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_CRC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_crc.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_crc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="DAC" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Digital-to-analog converter (DAC) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DAC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_dac.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_dac.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="MCUDBG" Cversion="1.0.0" condition="N32G43x STDPERIPH">
            <description>MCU debug component (MCUDBG) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DBG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_dbg.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_dbg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="DMA" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>DMA controller (DMA) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_DMA
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_dma.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_dma.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="EXTI" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>External interrupt/event controller (EXTI) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_EXTI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_exti.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_exti.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="FLASH" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Embedded Flash memory (FLASH) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_FLASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_flash.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_flash.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="GPIO" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>General-purpose I/O (GPIO) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_GPIO
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_gpio.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_gpio.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="I2C" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Inter-integrated circuit (I2C) interface driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_I2C
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_i2c.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_i2c.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="IWDG" Cversion="1.0.0" condition="N32G43x STDPERIPH">
            <description>Independent watchdog (IWDG) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_IWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_iwdg.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_iwdg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="LPTIM" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Low Power Timers (LPTIM) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_LPTIM
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_lptim.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_lptim.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="LPUART" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Low Power Universal asynchronous receiver transmitter (LPUART) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_LPUART
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_lpuart.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_lpuart.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="OPAMP" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Operational amplifier (OPAMP) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_OPAMP
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_opamp.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_opamp.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="PWR" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Power controller (PWR) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_PWR
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_pwr.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_pwr.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RCC" Cversion="1.0.0" condition="N32G43x STDPERIPH">
            <description>Reset and clock control (RCC) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RCC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_rcc.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_rcc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="RTC" Cversion="1.0.0" condition="N32G43x STDPERIPH">
            <description>Real-time clock (RTC) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_RTC
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_rtc.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_rtc.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="SPI" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Serial peripheral interface (SPI) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_SPI
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_spi.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_spi.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="TIMER" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Timers (TIMER) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_TIM
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_tim.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_tim.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="USART" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Universal synchronous asynchronous receiver transmitter (USART) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_USART
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_usart.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_usart.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="WWDG" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>Window watchdog (WWDG) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_WWDG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_std_periph_driver/inc/n32g43x_wwdg.h"/>
                <file category="source" name="firmware/n32g43x_std_periph_driver/src/n32g43x_wwdg.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="StdPeriph Drivers" Csub="USBDEV" Cversion="1.0.0" condition="N32G43x STDPERIPH RCC">
            <description>USB device (USBDEV) driver for N32G43x</description>
            <RTE_Components_h>
        #define RTE_DEVICE_STDPERIPH_USBDEV
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32g43x_usbfs_driver/inc" />
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_core.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_def.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_init.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_int.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_lib.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_mem.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_regs.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_sil.h"/>
                <file category="header" name="firmware/n32g43x_usbfs_driver/inc/usb_type.h"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_core.c"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_init.c"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_int.c"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_mem.c"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_regs.c"/>
                <file category="source" name="firmware/n32g43x_usbfs_driver/src/usb_sil.c"/>
            </files>
        </component>

        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="Common" Cversion="1.0.0" condition="N32G43x CMSIS Device">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_COMMON
            </RTE_Components_h>
            <files>
                <file category="include" name="firmware/n32g43x_algo_lib/inc" />
                <file category="header" name="firmware/n32g43x_algo_lib/inc/n32g43x_algo_common.h"/>
                <file category="source" name="firmware/n32g43x_algo_lib/lib/n32g43x_algo_common.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="AES" Cversion="1.0.0" condition="N32G43x Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_AES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_algo_lib/inc/n32g43x_aes.h"/>
                <file category="source" name="firmware/n32g43x_algo_lib/lib/n32g43x_aes.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="DES" Cversion="1.0.0" condition="N32G43x Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_DES
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_algo_lib/inc/n32g43x_des.h"/>
                <file category="source" name="firmware/n32g43x_algo_lib/lib/n32g43x_des.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="HASH" Cversion="1.0.0" condition="N32G43x Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_HASH
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_algo_lib/inc/n32g43x_hash.h"/>
                <file category="source" name="firmware/n32g43x_algo_lib/lib/n32g43x_hash.lib"/>
            </files>
        </component>
        <component Cclass="Device" Cgroup="Algorithm Libs" Csub="RNG" Cversion="1.0.0" condition="N32G43x Algorithm Common">
            <RTE_Components_h>
        #define RTE_DEVICE_ALGO_RNG
            </RTE_Components_h>
            <files>
                <file category="header" name="firmware/n32g43x_algo_lib/inc/n32g43x_rng.h"/>
                <file category="source" name="firmware/n32g43x_algo_lib/lib/n32g43x_rng.lib"/>
            </files>
        </component>
    </components>
</package>
